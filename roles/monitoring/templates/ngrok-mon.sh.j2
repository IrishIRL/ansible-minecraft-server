#!/bin/bash

# DECLARATIONS START #

  ## Token of Telegram bot
  TOKEN="{{ telegram_bot_token }}"

  ## Chat where to post the message
  CHAT="{{ telegram_chat_id }}"

  ## We need a file that has the current server address to check if it is still the same.
  FILE=/home/monitoring/curr_domain_address.txt

# DECLARATIONS END #

  ## Check that the FILE exists
  if [ ! -e "$FILE" ] ; then
      ## If it does not exist, then create the file
      touch "$FILE"
  fi

  if [ ! -w "$FILE" ] ; then
      ## Check that the file is writable, if not, then sends an error to Telegram chat and returns 1
      curl "https://api.telegram.org/bot$TOKEN/sendMessage?chat_id=$CHAT&text=Failed to write to the $FILE. Check ngrok-mon.sh"
      exit 1
  fi

  ## DOMAIN_NAME gets a json formatted information about the tunnel, cuts it to give only the proper server address.
  ## Example: 0.tcp.ngrok.io:123456
  DOMAIN_NAME=$(curl --silent --show-error http://127.0.0.1:4040/api/tunnels | jq '.tunnels[].public_url' | sed 's/.*\///' | sed 's/.$//')
  DOMAIN_TO_CHECK=$(cat $FILE)

  if [ "$DOMAIN_NAME" != "$DOMAIN_TO_CHECK" ]; then
       ## Write the new server address to the file
       echo "$DOMAIN_NAME" > $FILE
       ## Sends the message to the $CHAT with the bot$TOKEN regarding new $DOMAIN_NAME
       curl "https://api.telegram.org/bot$TOKEN/sendMessage?chat_id=$CHAT&text=New World Domain Name Address: $DOMAIN_NAME"
  fi
