# First thing first
enable_rcon: "TRUE"
rcon_port: "25575"
rcon_password: input_rcon_pass_here

# Minecraft Custom Configurations
## Delete all three worlds before we start the game (normal world, nether, the end)
delete_worlds: false

## Logo of the Server
## Please use 64x64 icon for the server, it will most probably not work with other sizes.
## Set override_icon to true, to change the png
server_icon: https://link.to/logo.png
override_icon: false

## Install custom Datapacks
## Use key of item for the zip file saved to the folder (do not need .zip at the end)
## Use value of item for the link where to download zip from
## PS. Zip file should not contain several zipped datapacks inside. One zip = one datapack
datapack_items:
  datapack_1: https://link.to/datapack.zip
install_datapacks: false


# Whitelist options

## You can provide both WHITELIST_FILE and WHITELIST, which are processed in that order.
## UUIDs passed via WHITELIST need to be the dashed variant, otherwise it not be recognised and instead added as a username.
## If running Minecraft 1.7.5 or earlier, these variables will apply to white-list.txt, with 1.7.6 implementing support for whitelist.json. Make sure your WHITELIST_FILE is in the appropriate format.
## If either WHITELIST_FILE or WHITELIST is provided, the server property white-list is automatically set to true, enabling whitelist functionality. 
## Alternatively you can set ENABLE_WHITELIST=TRUE to only set the server property white-list without modifying the whitelist file. 
## In this case the whitelist can be managed using the whitelist add and whitelist remove commands.
## Remember you can set enforcement via the ENFORCE_WHITELIST variable.
## NB! Most of the commands are commented out and you should manually add them to the roles/minectaft/tasks/main.yaml file. (Otherwise white-list will be automatically set to true)

## Whitelist from file (Use WHITELIST_FILE: "{{ whitelist_file }}")
## whitelist_file: "" (uncomment this to start it working)

## Whitelist users (Example: user1, uuid2). (Use WHITELIST: "{{ whitelist }}")
## whitelist: irland94

## Override whitelist (Use OVERRIDE_WHITELIST: "{{ override_whitelist }}")
## override_whitelist: "TRUE"

# Enable whitelist
enable_whitelist: "FALSE"

## Enforce whitelist on the server
## To enforce the whitelist and auto-kick players not included in whitelist configuration, set ENFORCE_WHITELIST=TRUE. 
## By default any user can join your Minecraft server if it's publicly accessible, regardless of your whitelist configuration.
## (Use ENFORCE_WHITELIST: "{{ enforce_whitelist }}")
## enforce_whitelist: "TRUE"


# Minecraft options

# Minecraft server composing (server options)
## Minecraft_port is used inside a docker.
## Most probably should be used default, but maybe there is a usecase. 
minecraft_port: 25565

## minecraft_version of minecraft, you can choose from: LATEST (the default), SNAPSHOT or a specific version, such as "1.7.9"
## Examles: version: 1.7.9, version: SNAPSHOT, version: LATEST
minecraft_version: LATEST

## memory_capacity is used to allocate how much RAM should be used.
## Do not use more than you have on your raspberri pi :D
memory_capacity: 6G

## Message of the Day
motd_message: Welcome to Â§cthe Server!

## Game Difficulty
## Default: EASY
game_difficulty: HARD

## Gamemode - By default, Minecraft servers are configured to run in Survival mode. 
## You can change the mode using MODE where you can either provide the standard numerical values or the shortcut values:
##  CREATIVE, SURVIVAL, ADVENTURE, SPECTATOR (only for Minecraft 1.8 or later)
gamemode: SPECTATOR

## PVP Mode
## By default, servers are created with player-vs-player (PVP) mode enabled. 
## You can disable this with the PVP environment variable set to FALSE, otherwise set to TRUE
pvp_enabled: "TRUE"

## Level Type and Generator Settings
## By default, a standard world is generated with hills, valleys, water, etc. 
## A different level type can be configured by setting LEVEL_TYPE to an expected type, for example
## DEFAULT, FLAT, LARGEBIOMES, AMPLIFIED, CUSTOMIZED, BUFFET, 
## BIOMESOP (Biomes O' Plenty for 1.12 and older), BIOMESOPLENTY (Biomes O' Plenty for 1.15 and above)
level_type: "DEFAULT"

## Op/Administrator Players
## Could be used as a link to json file, but I will just write usernames.
## Example: user1,uuid2 
op_user_list: user1

## allow_nether - allow to go to the netherworld.
allow_nether: "TRUE"

## max_players - set up how many people could connect to the server at once.
## Default: 20
max_players: "10"

# max_build_height
max_build_height: "256"

## max_world_size - this sets the maximum possible size in blocks, expressed as a radius, that the world border can obtain.
max_world_size: "10000"

## announce_player_achievements - allows server to announce when a player gets an achievement.
announce_player_achievements: "TRUE"

## enable_command_block - enables command blocks.
enable_command_block: "TRUE"

## view_distance - the amount of world data the server sends the client
view_distance: "8"

## world_seed is used to set up a custom seed for the map
world_seed: "-6627837072499748301"

## force_gamemode is used to force players to join in the default game mode.
## false - Players will join in the gamemode they left in. (Default)
## true - Players will always join in the default gamemode.
force_gamemode: "FALSE"

## generate_structures is used to define whether structures (such as villages) will be generated.
## false - Structures will not be generated in new chunks.
## true - Structures will be generated in new chunks. (Default)
generate_structures: "TRUE"

## Spawn Animals - Determines if animals will be able to spawn.
spawn_animals: "TRUE"

## Spawn Monsters - Determines if monsters will be spawned.
spawn_monsters: "TRUE"

## Spawn NPCs - Determines if villagers will be spawned.
spawn_npcs: "TRUE"

## Set spawn protection - Sets the area that non-ops can not edit (0 to disable)
spawn_protection: "0"

## server_type is used to setup a custom server.
## Server types available: 
## VANILLA (default), FORGE, FABRIC, BUKKIT, SPIGOT, PAPER, AIRPLANE, PUFFERFISH,  
## PURPUR, MAGMA, MOHIST, CATSERVER, CANYON, SPONGEVANILLA, LIMBO, CRUCIBLE
## More info: https://github.com/itzg/docker-minecraft-server#running-a-paper-server
server_type: PAPER

# Minecraft server composing (overwrite options)
## force_world_copy is used to overwrite world on start.
## TRUE - to overwrite, FALSE - to leave intact. 
## Default: FALSE
## PS. Does not seem to work. Will look at that later. Check delete_world for now.
## force_world_copy: "FALSE"

## override_server_properties is used to override the server configuration each time the container starts up.
## TRUE - to overwrite, FALSE - to leave intact.
## Default: FALSE
override_server_properties: "TRUE"

## skip_server_properties is used to leave server.properties file intact
## PS. Currently not in use.
## skip_server_properties: "FALSE"


# Ngrok options
## Ngrok uses authentication token to create the tunnel,
## So please input a correct ngrok auth token here
ngrok_auth_token: input_token_here

# Logger options
## I am using telegram bot to send different type of log messages,
## So please input a correct token here
telegram_bot_token: input_token_here

## My bot is configured to send messages to one chat,
## So please input a correct chat id here
telegram_chat_id: input_chat_id_here
